# Default values for cheshire-cat
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global settings
global:
  namespace: cheshire-cat
  storageClass: local-path

# Image settings
image:
  repository: ghcr.io/cheshire-cat-ai/core
  tag: "latest"
  pullPolicy: IfNotPresent

# Replica counts
replicaCount:
  cheshireCat: 1
  qdrant: 1
  nginx: 1

# Service configuration
service:
  type: NodePort
  port: 80
  nodePort: 30080

# Persistent storage configuration
persistence:
  enabled: true
  storageClass: local-path
  qdrant:
    size: 10Gi
  static:
    size: 1Gi
  plugins:
    size: 5Gi
  data:
    size: 5Gi

# Qdrant configuration
qdrant:
  image:
    repository: qdrant/qdrant
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    port: 6333
  config:
    enableTls: false
    logLevel: INFO
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

# Cheshire Cat Core configuration
cheshireCat:
  debug: true
  logLevel: INFO
  host: localhost
  port: 80
  useSecureProtocols: false
  httpsProxyMode: false
  jwt:
    algorithm: HS256
    expireMinutes: 1440
  cors:
    enabled: true
    allowedOrigins: "http://localhost"
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

# NGINX configuration
nginx:
  image:
    repository: nginx
    tag: "alpine"
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

# Security configuration
secrets:
  # These should be overridden or provided via external secret management
  jwtSecret: "change-me-jwt-secret-key"
  apiKey: "change-me-api-key"
  apiKeyWs: "change-me-api-key-ws"
  qdrantApiKey: "change-me-qdrant-api-key"

# NGINX configuration
nginxConfig: |
  user nginx;
  worker_processes auto;
  error_log /var/log/nginx/error.log notice;
  pid /var/run/nginx.pid;

  events {
      worker_connections 1024;
  }

  http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log /var/log/nginx/access.log main;

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;

      # Gzip compression
      gzip on;
      gzip_vary on;
      gzip_min_length 10240;
      gzip_proxied expired no-cache no-store private must-revalidate auth;
      gzip_types
          text/plain
          text/css
          text/xml
          text/javascript
          application/x-javascript
          application/xml+rss
          application/javascript
          application/json;

      # Rate limiting
      limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
      limit_req_zone $binary_remote_addr zone=ws:10m rate=5r/s;

      # Health check endpoint
      server {
          listen 80;
          server_name _;

          location /health {
              access_log off;
              return 200 "healthy\n";
              add_header Content-Type text/plain;
          }

          # Static files
          location /static/ {
              alias /var/www/static/;
              expires 1y;
              add_header Cache-Control "public, immutable";
              try_files $uri $uri/ =404;
          }

          # WebSocket connection for Cat
          location /ws {
              limit_req zone=ws burst=20 nodelay;
              proxy_pass http://cheshire-cat-core:80;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_read_timeout 86400;
          }

          # API endpoints
          location / {
              limit_req zone=api burst=20 nodelay;
              proxy_pass http://cheshire-cat-core:80;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              
              # CORS headers
              add_header 'Access-Control-Allow-Origin' '*' always;
              add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
              add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
              add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

              if ($request_method = 'OPTIONS') {
                  add_header 'Access-Control-Allow-Origin' '*';
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                  add_header 'Access-Control-Max-Age' 1728000;
                  add_header 'Content-Type' 'text/plain; charset=utf-8';
                  add_header 'Content-Length' 0;
                  return 204;
              }
          }
      }
  } 