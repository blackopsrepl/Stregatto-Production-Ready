apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: {{ .Values.global.namespace }}
  labels:
    app: nginx
spec:
  replicas: {{ .Values.replicaCount.nginx }}
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: static
          mountPath: /var/www/static
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: {{ .Values.nginx.resources.requests.memory }}
            cpu: {{ .Values.nginx.resources.requests.cpu }}
          limits:
            memory: {{ .Values.nginx.resources.limits.memory }}
            cpu: {{ .Values.nginx.resources.limits.cpu }}
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: static
        persistentVolumeClaim:
          claimName: static-pvc
      restartPolicy: Always 