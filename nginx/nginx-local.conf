# Run nginx as nginx user for security
user nginx;

# Automatically set worker processes based on CPU cores
worker_processes auto;

# Log errors with info level detail
error_log /var/log/nginx/error.log info;

# Store process ID for service management
pid /var/run/nginx.pid;

# Event-driven connection handling
events {
    # Maximum concurrent connections per worker
    worker_connections 1024;
}

http {
    # Include MIME type definitions
    include /etc/nginx/mime.types;
    
    # Default MIME type for unknown files
    default_type application/octet-stream;

    # Custom log format with detailed request information
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Enable access logging with custom format
    access_log /var/log/nginx/access.log main;

    # Enable efficient file transmission
    sendfile on;
    
    # Optimize TCP packet transmission
    tcp_nopush on;
    tcp_nodelay on;
    
    # Keep connections alive for 65 seconds
    keepalive_timeout 65;
    
    # Set hash table size for MIME types
    types_hash_max_size 2048;
    
    # üõ°Ô∏è SECURITY: Hide nginx version in error pages and headers
    server_tokens off;

    # HTTP Server Configuration
    server {
        # Listen on port 80 for IPv4 and IPv6
        listen 80;
        listen [::]:80;
        
        # Server name for virtual host matching
        server_name localhost;

        # Maximum upload size for large files/models
        client_max_body_size 1G;
        
        # Extended timeouts for long-running requests
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        
        # üõ°Ô∏è SECURITY HEADERS for web application protection
        # Prevent clickjacking attacks
        add_header X-Frame-Options DENY always;
        # Prevent MIME type sniffing
        add_header X-Content-Type-Options nosniff always;
        # Enable XSS protection in browsers
        add_header X-XSS-Protection "1; mode=block" always;

        # Main application proxy - forward all requests to backend
        location / {
            # Backend application URL
            proxy_pass http://cheshire-cat-core/;
            
            # Use HTTP/1.1 for better performance
            proxy_http_version 1.1;
            
            # Clear connection header for keep-alive
            proxy_set_header Connection "";
            
            # Preserve original host header
            proxy_set_header Host $host;
            
            # Forward original host for redirects
            proxy_set_header X-Forwarded-Host $host;
            
            # Forward original protocol (http/https)
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Forward real client IP address
            proxy_set_header X-Real-IP $remote_addr;
            
            # Forward complete client IP chain
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # WebSocket endpoint for real-time communication
        location /ws {
            # Backend WebSocket URL
            proxy_pass http://cheshire-cat-core/ws;
            
            # Required for WebSocket connections
            proxy_http_version 1.1;
            
            # Enable WebSocket upgrade
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            
            # Preserve host information
            proxy_set_header Host $host;
            
            # Forward client IP for WebSocket connections
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Static files serving with caching
        location /static {
            # Local directory for static assets
            alias /var/www/static;
            
            # Cache static files for 30 days
            expires 30d;
            
            # Add cache control headers for browsers and CDNs
            add_header Cache-Control "public, immutable";
        }

        # Health check endpoint for monitoring systems
        location /health {
            # Don't log health check requests
            access_log off;
            
            # Return simple healthy status
            return 200 "healthy\n";
            
            # Set appropriate content type
            add_header Content-Type text/plain;
        }
    }
}